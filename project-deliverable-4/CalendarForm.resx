<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing"">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAGBgAAAEAIACICQAAFgAAACgAAAAYAAAAMAAAAAEAIAAAAAAAAAkAABMLAAATCwAAAAAAAAAA
        AAAAAAACAAAAVwAAANMAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAADTAAAAVgAAAAIAAABZAAAA6gAAANkAAACXAAAAjQAA
        AI4AAACOAAAAjgAAAI4AAACOAAAAjgAAAI4AAACOAAAAjgAAAI4AAACOAAAAjgAAAI4AAACOAAAAjQAA
        AJcAAADZAAAA6gAAAFkAAADYAAAA2gAAACwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsAAAA2gAAANcAAAD/AAAAnQAA
        AAAAAAABAAAAVAAAAIIAAABmAAAASAAAAIAAAABzAAAAQAAAAHsAAAB7AAAAQQAAAHMAAACAAAAARwAA
        AGcAAACCAAAAUwAAAAEAAAAAAAAAnQAAAP8AAAD/AAAAlgAAAAAAAAACAAAApgAAAP8AAADMAAAAjwAA
        AP8AAADlAAAAgAAAAPYAAAD2AAAAgQAAAOUAAAD+AAAAjgAAAMwAAAD/AAAApgAAAAIAAAAAAAAAlgAA
        AP8AAAD/AAAAlgAAAAAAAAABAAAALwAAAEgAAAA5AAAAKAAAAEcAAABAAAAAJAAAAEUAAABFAAAAJAAA
        AEAAAABHAAAAKAAAADkAAABIAAAALgAAAAEAAAAAAAAAlgAAAP8AAAD/AAAAlgAAAAAAAAABAAAAawAA
        AKYAAACDAAAAXAAAAKQAAACUAAAAUwAAAJ4AAACeAAAAUwAAAJQAAACkAAAAXAAAAIQAAACmAAAAawAA
        AAEAAAAAAAAAlgAAAP8AAAD/AAAAlgAAAAAAAAACAAAAnAAAAPIAAAC/AAAAhgAAAO8AAADXAAAAeAAA
        AOcAAADnAAAAeQAAANcAAADvAAAAhQAAAMAAAADyAAAAmwAAAAIAAAAAAAAAlgAAAP8AAAD/AAAAlgAA
        AAAAAAAAAAAAIwAAADYAAAArAAAAHgAAADUAAAAwAAAAGwAAADMAAAAzAAAAGwAAADAAAAA1AAAAHgAA
        ACsAAAA2AAAAIwAAAAAAAAAAAAAAlgAAAP8AAAD/AAAAlgAAAAAAAAACAAAAhAAAAM0AAACiAAAAcQAA
        AMoAAAC2AAAAZgAAAMMAAADDAAAAZgAAALYAAADKAAAAcQAAAKIAAADNAAAAhAAAAAEAAAAAAAAAlgAA
        AP8AAAD/AAAAlgAAAAAAAAACAAAAigAAANYAAACpAAAAdgAAANMAAAC+AAAAagAAAMwAAADMAAAAawAA
        AL4AAADTAAAAdgAAAKkAAADWAAAAiQAAAAIAAAAAAAAAlgAAAP8AAAD/AAAAlgAAAAAAAAAAAAAAIAAA
        ADIAAAAnAAAAGwAAADEAAAAsAAAAGQAAAC8AAAAvAAAAGQAAACwAAAAxAAAAGwAAACcAAAAyAAAAIAAA
        AAAAAAAAAAAAlgAAAP8AAAD/AAAAlgAAAAAAAAACAAAAlgAAAOoAAAC5AAAAgQAAAOcAAADQAAAAcwAA
        AN8AAADfAAAAdQAAANAAAADnAAAAgQAAALkAAADqAAAAlgAAAAIAAAAAAAAAlgAAAP8AAAD/AAAAlgAA
        AAAAAAABAAAAdAAAALUAAACPAAAAZAAAALMAAAChAAAAWQAAAKwAAACtAAAAWwAAAKEAAACzAAAAZAAA
        AI8AAAC1AAAAdAAAAAEAAAAAAAAAlgAAAP8AAAD/AAAAlwAAAAAAAAABAAAAAwAAAAUAAAAEAAAAAwAA
        AAUAAAAEAAAAAwAAAAQAAAAEAAAAAwAAAAQAAAAFAAAAAwAAAAQAAAAFAAAAAwAAAAEAAAAAAAAAlwAA
        AP8AAAD/AAAA2gAAAKMAAACkAAAApAAAAKUAAACnAAAApgAAAKQAAACkAAAApAAAAKQAAACkAAAApAAA
        AKQAAACkAAAApgAAAKcAAAClAAAApAAAAKQAAACjAAAA2gAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        APQAAADPAAAA4QAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA4QAAAM8AAAD0AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA3QAAAEgAAAAbAAAAJAAAAJ4AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAACeAAAAJQAAABsAAABIAAAA3QAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAAfgAAAEQAAADGAAAAiQAAADMAAADmAAAA/wAAAP8AAAD/AAAA/wAAAOYAAAA0AAAAigAA
        AMYAAABDAAAAfgAAAP8AAAD/AAAA/wAAAP8AAAD1AAAA/wAAAP8AAAD/AAAAZAAAAJcAAAD/AAAA6AAA
        AD4AAADWAAAA/wAAAP8AAAD/AAAA/wAAANYAAAA/AAAA6AAAAP8AAACXAAAAZAAAAP8AAAD/AAAA/wAA
        APUAAACuAAAA/wAAAP8AAAD/AAAAZQAAAJsAAAD/AAAA6AAAAEIAAADWAAAA/wAAAP8AAAD/AAAA/wAA
        ANYAAABCAAAA6QAAAP8AAACaAAAAZQAAAP8AAAD/AAAA/wAAAK4AAAAoAAAAuwAAAP8AAAD/AAAAZwAA
        AJsAAAD/AAAA6AAAAEIAAADaAAAA/wAAAP8AAAD/AAAA/wAAANoAAABDAAAA6AAAAP8AAACaAAAAZwAA
        AP8AAAD/AAAAuwAAACgAAAAAAAAAFgAAAGMAAACRAAAAOwAAAJoAAAD/AAAA5wAAADUAAAB9AAAAlwAA
        AJYAAACWAAAAlwAAAH0AAAA2AAAA6AAAAP8AAACZAAAAOwAAAJEAAABjAAAAFgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAF8AAAD0AAAAsgAAAA4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOAAAAswAA
        APQAAABeAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAA=
</value>
  </data>
</root>